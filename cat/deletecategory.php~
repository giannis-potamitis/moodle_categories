<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

require_once('../../config.php');
//require_once('addcategory_form.php');
//require_once($CFG->dirroot.'/lib/moodlelib.php');


$PAGE->https_required();

require_login();


// the mycat_category id
$categoryid = required_param('catid', PARAM_INT);
// Add course module id as a required parameter 
$cmid = required_param('cmid', PARAM_INT);
$category = $DB->get_record('mycat_category', array('id'=>$categoryid), '*', MUST_EXIST);
$mycat = $DB->get_record('mycat', array('id'=>$category->mycatid), '*', MUST_EXIST);


$PAGE->set_url('/mod/mycat/deletecategory.php', array('catid'=>$categoryid, 'cmid'=>$cmid));

// Reduce the total by maxgrade
$mycat->total -= $category->maxgrade;

// Updating the priorities and the nextpriority
$temp = -1;
if ($category->priority == $mycat->nextpriority-1) {
	$temp = $category->priority;
}
else {// less than
	$thecategories = $DB->get_records('mycat_category', null, 'priority ASC');
	$start = false;
	foreach ($thecategories as $index => $object) {
		if ($object->priority == $category->priority) {
			$start = true;
			continue;
		}
		else if ($start) {
			$temp = $object->priority;
			$object->priority--;
			$DB->update_record('mycat_category', $object);
		}
	}	
}

$mycat->nextpriority = $temp;
$DB->update_record('mycat', $mycat);
$DB->delete_records('mycat_category', array ('id' => $categoryid));


/* WRITE CODE: for not allowing delete category when mycat object have already invoken in a marked assignment */ 
/* Check if that mycat group is already used by an assignment */ /*
$catassign = $DB->get_records('mycat_catassign', array('mycatid' => $mycat->id));
if ($catassign != null) {
	foreach ($catassign as $obj) {
		// Update the total grade of that assignment
		$DB->update_record('assignment', array('id' => $obj->assignmentid, 'grade' => $mycat->total));
		// Check if we have already submit marks for that assignment for any user
		// get submission object
		$submissions = $DB->get_records('assignment_submissions', array ('assignment' => $obj->assignmentid));
		if ($submissions != null) {
			foreach ($submissions as $sub) {
				$submitcat = $DB->get_record('mycat_submitcat', array ('categoryid' => $category->id, 'ass_sub_id' => $sub->id), '*', MUST_EXIST);
				$sub->grade -= $submitcat->grade;
				$DB->update_record('assignment_submissions', $sub);
				$DB->delete_records('mycat_submitcat', array ('id' => $submitcat->id));
			}
		}
	}
}

*/
redirect($CFG->wwwroot . '/mod/mycat/view.php?id=' . $cmid);





<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.


if (!defined('MOODLE_INTERNAL')) {
    die('Direct access to this script is forbidden.!!!!');    ///  It must be included from a Moodle page
}


/*
foreach ($CFG as $fields => $value) {
  echo $value ."<br/>";
} */

require_once($CFG->dirroot.'/lib/formslib.php');



/**
 * Module instance settings form
 */
class mycat_addcategory_form extends moodleform {

    /**
     * Defines forms elements
     */
    function definition() {

				global $CFG;

        $mform = & $this->_form;
        
        /* id field */
				$mform->addElement('hidden', 'id');
        $mform->setType('id', PARAM_INT);

				/* mycatid field */
				$mform->addElement('hidden', 'mycatid');
        $mform->setType('mycatid', PARAM_INT);

        //-------------------------------------------------------------------------------
        // Adding the "general" fieldset, where all the common settings are showed
        $mform->addElement('header', 'fordescription', get_string('fordescription', 'mycat'));
				/* description filed */
				$mform->addElement('text', 'description', get_string('description', 'mycat'), array('size'=>'64'));
				$mform->setType('description', PARAM_TEXT);
				$mform->addRule('description', null, 'required', null, 'client');
        $mform->addRule('description', get_string('maximumchars', '', 64), 'maxlength', 64, 'client');
        $mform->addHelpButton('description', 'description', 'mycat');


				$mform->addElement('header', 'formaxgrade', get_string('formaxgrade', 'mycat'));
				/* maxgrade field */
				$mform->addElement('text', 'maxgrade', get_string('maxgrade', 'mycat'), 'size="4"');
				$mform->setType('maxgrade', PARAM_INT);
				$mform->addRule('maxgrade', null, 'required', null, 'client');
				$mform->addHelpButton('maxgrade', 'maxgrade', 'mycat');


				
				$mform->addElement('header', 'forpriority', get_string('forpriority', 'mycat'));
				/* priority field */
				$mform->addElement('text', 'priority', get_string('priority', 'mycat'), 'size="4"');
				$mform->setType('priority', PARAM_INT);
				$mform->addRule('priority', null, 'required', null, 'client');
				$mform->addHelpButton('priority', 'priority', 'mycat');


        //-------------------------------------------------------------------------------
        // add standard buttons
        //$this->add_action_buttons();
				$buttonarray=array();
				$buttonarray[] = &$mform->createElement('submit', 'submitbutton', get_string('savechanges'));
				$buttonarray[] = &$mform->createElement('reset', 'resetbutton', get_string('revert'));
				$buttonarray[] = &$mform->createElement('cancel');
				$mform->addGroup($buttonarray, 'buttonar', '', array(' '), false);
				$mform->closeHeaderBefore('buttonar');

    }
}
